shell_patterns=0
=+ f \.(rmvb|avi|rm|mpeg|mkv|mp4|flv|asf|wmv)$
m       Make video clips (MILESTONE)
	ss=%{Start position: ([HH:]MM:SS)}
	length=%{Clip length: ([HH:]MM:SS)}
	name=%{Clip name}
        profile=milestone
	x-terminal-emulator -e makeclip %f $ss $length "$name" $profile&
+ f \.(rmvb|avi|rm|mpeg|mkv|mp4|flv|asf|wmv)$
m       Make video clips (MP4)
	ss=%{Start position: ([HH:]MM:SS)}
	length=%{Clip length: ([HH:]MM:SS)}
	name=%{Clip name}
        profile=mp4
	x-terminal-emulator -e makeclip %f $ss $length "$name" $profile&
+ f \.(rmvb|avi|rm|mpeg|mkv|mp4|flv|asf|wmv)$
m       Make video clips (AVI)
	ss=%{Start position: ([HH:]MM:SS)}
	length=%{Clip length: ([HH:]MM:SS)}
	name=%{Clip name}
        profile=avi
	x-terminal-emulator -e makeclip %f $ss $length "$name" $profile&
+ f \.(rmvb|avi|rm|mpeg|mkv|mp4|flv|asf|wmv)$
m       Make video clips 
	ss=%{Start position: ([HH:]MM:SS)}
	length=%{Clip length: ([HH:]MM:SS)}
	name=%{Clip name}
        profile=%{Profile (havi|avi|mp4|wmv)}
	x-terminal-emulator -e makeclip %f $ss $length "$name" $profile&
=+ f \.pdg\.zip$
u       Open with UnicornViewer
	set %s;
	exec_silently unicornviewer "$@"&

=+ f \.zbook$ | f \.zhtm$
n       View with NightGun
	set %s;
	exec_silently nightgun "$@"&
	
=+ f \.zip$ | f \.zpic$ | f \.zhtm$ | f \.rar$
q       qcomicbook
	qcomicbook %f&
	
=+ f \.zip$ | f \.zpic$ | f \.zhtm$ | f \.rar$
c       comix
	comix %f&
	
=+ f \.zip$ | f \.zpic$ | f \.zhtm$ | f \.rar$
1       cbrpager
	cbrpager %f&
	

=+ f \.zip$ | f \.zpic$ | f \.rar$ | f \.cbr$
2       comicsviewer
	exec_silently comicsviewer %f&
	
+ f \.iso$
m       Mount with vcdrom
	vcdrom1 %f
	
+ f * 
v       Edit with Vim
        set %s;
        vim-cli "$@"&
	
=+ f \.1$ | f \.3$ | f \.4$ | f \.5$ | f \.6$ | f \.7$ | f \.8$ | f \.man$ & t r
m       Display the file with roff -man
	nroff -man %f | less


=+ f \.tar\.gz$ | f \.tar\.z$ | f \.tgz$ | f \.tpz$ | f \.tar\.Z$| f \.tar\.bz2$ & t r
d       Extract the contents of a compressed tar file
	unset EXT
	case %f in 
	    *.tar.bz2) EXT=tar_bz2;;
	esac
	if [ "$EXT" = "tar_bz2" ]; then
	  bunzip2 -c %f | tar xvf -
	else
	  gzip -dc %f | tar xvf -
	fi

+ f \.tar.gz$ | f \.tgz$ | f \.tpz$ | f \.tar.Z$ | f \.tar.z$ | f \.tar.bz2$ | f \.tar.F$ & t r & ! t t
x       Extract compressed tar file to subdirectory
	unset D
	set gzip -cd
	case %f in
	  *.tar.gz) D="`basename %f .tar.gz`";;
	  *.tgz)    D="`basename %f .tgz`";;
	  *.tpz)    D="`basename %f .tpz`";;
	  *.tar.Z)  D="`basename %f .tar.Z`";;
	  *.tar.z)  D="`basename %f .tar.z`";;
	  *.tar.bz2) D="`basename %f .tar.bz2`"; set bunzip2 -c ;;
	  *.tar.F) D="`basename %f .tar.F`"; set freeze -dc;
	esac
	mkdir $D; cd $D && ($1 $2 ../%f | tar xvf -)


+ f \.gz$ | f \.tgz$ | f \.tpz$ | f \.Z$ | f \.z$ | f \.bz2$ & t r & ! t t
c       Convert gz<->bz2, tar.gz<->tar.bz2 & tgz->tar.bz2
	unset D
	unset EXT
	case %f in
	    *.tgz)	EXT=tgz;;
	    *.tpz)	EXT=tpz;;
	    *.Z)	EXT=Z;;
	    *.z)	EXT=z;;
	    *.gz)	EXT=gz;;
	    *.bz2)	EXT=bz2;;
	esac
        case $EXT in
	  tgz|tpz)	D="`basename %f .$EXT`.tar";;
	  gz|Z|z)	D="`basename %f .$EXT`";;
	  bz2)		D="`basename %f .bz2`";;
        esac
        if [ "$EXT" = "bz2" ]; then
	    bunzip2 -v %f ; gzip -f9 -v $D
	else
	    gunzip -v %f ; bzip2 -v $D
	fi

+ x /usr/bin/open | x /usr/local/bin/open & x /bin/sh
o       Open next a free console
        open -s -- sh

################################################################
#TAG OR SELECT
################################################################

+ t r | t d | t l | t t
t       To ~/public/hotstuffs (tagfs)
	tags=%{Input tags, like "cn,good"}
	if [ -n "%t" ] ; then
	    tagfs -r ~/public/hotstuffs "$tags" %t
	else
	    tagfs -r ~/public/hotstuffs "$tags" %f
	fi
+ t r | t d | t l | t t
A       Rename with tagfs
	tags=%{Input tags, like "cn,good"}
	if [ -n "%t" ] ; then
	    tagfs -r %D "$tags" %t
	else
	    tagfs -r %D "$tags" %f
	fi

+ t t | t d
g       Open directory with Geeqie image viewer
        exec_silently geeqie %f&
        
+ t t | t d
f       Open directory with Feh imaga viewer
        exec_silently fehdir %f&
        
        
+ t d
c       Compress the current subdirectory (tar.gz)
	Pwd=`basename "%d" /`
	echo -n "Name of the compressed file (without extension) [$Pwd]: "
	read tar
        if [ "$tar"x = x ]; then tar="$Pwd"; fi
	cd .. && \
	tar cf - "$Pwd" | gzip -f9 > "$tar.tar.gz" && \
	echo "../$tar.tar.gz created."
= t d & t n
z       Compress the current subdirectory (tar.bz2)
	Pwd=`basename %d /`
	echo -n "Name of the compressed file (without extension) [$Pwd]: "
	read tar
        if [ "$tar"x = x ]; then tar="$Pwd"; fi
	cd .. && \
	tar cf - "$Pwd" | bzip2 -f > "$tar.tar.bz2" && \
	echo "../$tar.tar.bz2 created."

+ t t | t d | t r | t l
s       Create symbol links of files
        if [ -n "%t" ] ; then
		set %t
	else
		set %f
	fi
	for src in "$@" ; do
	    ln -Tsvf "%d/$src" "%D/$src"
	done
+  t d | t t | t r | t l
l       Create symbol links and prefix a dot(.)
        if [ -n "%t" ] ; then
		set %t
	else
		set %f
	fi
	for src in "$@" ; do
	    ln -sTvf "%d/$src" "%D/.$src"
	done

+ t d | t t
B       copy -a files to target directory
	if [ -n "%t" ] ; then
	    set %t
	else
	    set %f
	fi
	for src in "$@" ; do 
	    cp -auv "$src" "%D/"
	    shift
	done
	
+ t d | t t
C       Compress into separated archives to target
	if [ -n "%t" ] ; then
	    set %t
	else
	    set %f
	fi
	for src in $@ ; do 
	    fn=`basename "$src"`
	    tar -cjvf "%D/$fn.tar.bz2" "$fn"
	    echo -- "%D/$fn.tar.bz2" created.
	    shift
	done
	
+ t d | t t
D       Compress into one archive to target
	if [ -n "%t" ] ; then
	    set %t
	else
	    set %f
	fi
	fn=`basename %d`
	tar -cjvf "%D/$fn.tar.bz2" $@
	echo -- "%D/$fn.tar.bz2" created.


+ t t | t d
E       Make ZBook on selected directories
	set %s;
	makezbook "$@"
	
+ t t | t d
F       Make ZPIC on selected directories
	set %s;
	zipimgfd "$@"
	
##################################################
#All
##################################################

X       Zim-insert-screenshot
	cd %D
	zim-insert-screenshot %d/%f
	
Y       Zim-insert-screenshot by hand
	cd %D
	zim-insert-screenshot --hand %d/%f
	
Z       Zim-insert-screenshot Directory
	cd %D
	dn=`dirname %D`
	dn=`basename "$dn"`
	#echo -e " *[[$dn|$dn]]>>../$dn.txt"
	#exit 0
	for i in %d/* ; do
	    zim-insert-screenshot "$i"
	done

